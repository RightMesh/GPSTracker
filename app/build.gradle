plugins {
    id 'com.android.application'
    id 'io.left.rightmesh.rightmesh-plugin' version '1.8.4'
}

preBuild.dependsOn("rightmesh")

repositories {
    mavenCentral()
    jcenter()
    google()
    maven {
        url "http://artifactory.rightmesh.io/artifactory/maven"
        credentials {
            username rightmesh_build_username
            password rightmesh_build_password
        }
    }
    maven {
        url "https://dl.bintray.com/ethereum/maven"
    }
}

apply from: 'checkstyle.gradle'
apply from: 'findbugs.gradle'
apply from: 'pmd.gradle'

android {
    compileSdkVersion 28
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "rightmesh.left.io.gpstracker"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug{
            buildConfigField "String", "SUPER_PEER_URL", "\"192.168.3.151\""
            buildConfigField "int", "MESH_PORT", "5001"
            buildConfigField "String", "SUPER_PEER_ID", "\"0x656284abf20af4192d86f2f6f3e7ce04e5718302\""
        }
        release {
            buildConfigField "String", "SUPER_PEER_URL", "\"192.168.3.151\""
            buildConfigField "int", "MESH_PORT", "5001"
            buildConfigField "String", "SUPER_PEER_ID", "\"0x656284abf20af4192d86f2f6f3e7ce04e5718302\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions{
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            // All the usual Gradle options.
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen {false}
                showStandardStreams = true
            }
        }
    }
}
configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'io.left.rightmesh:lib-rightmesh-android:0.10.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

    compileOnly 'com.google.code.findbugs:annotations:3.0.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'androidx.arch.core:core-testing:2.0.0' //testing ViewModel

    testImplementation 'org.robolectric:robolectric:4.1'
}